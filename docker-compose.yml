version: "3.9"

networks:
  default:
    ipam:
      driver: default
      config:
        - subnet: ${DOCKER_SUBNET}

x-logging:
      &default-logging
      driver: "json-file"
      options:
        max-size: "10M"
        max-file: "10"

services:

################################################################################
### Core services for FASTEN
################################################################################

  zookeeper:
    image: ${ZOOKEEPER_IMAGE}
    restart: "unless-stopped"
    env_file:
      - zoo.env
    volumes:
      - ${VOLUME_MOUNT}/zookeeper/data:/data
      - ${VOLUME_MOUNT}/zookeeper/datalog:/datalog
    ports:
      - "12181:2181"
    logging: *default-logging
    deploy:
      resources:
        limits:
          memory: 1G

  kafka:
    image: ${KAFKA_IMAGE}
    restart: "unless-stopped"
    env_file:
      kafka.env
    volumes:
      - ${VOLUME_MOUNT}/kafka:/kafka
    ports:
      - "19092:19092"
    logging: *default-logging
    deploy:
      resources:
        limits:
          memory: 4G
    depends_on:
      - zookeeper

  kafdrop:
    image: obsidiandynamics/kafdrop
    restart: "unless-stopped"
    ports:
      - "${KAFDROP_HTTP_PORT}:9000"
    environment:
      KAFKA_BROKERCONNECT: "${KAFKA_INTERNAL_ADDR}"
    logging: *default-logging
    deploy:
      resources:
        limits:
          memory: 2G
    depends_on:
      - kafka

  metadata-db:
    build:
      context: metadata-db
      dockerfile: Dockerfile
    restart: "unless-stopped"
    environment:
      POSTGRES_PASSWORD: "${METADATA_DB_PASSWORD}"
    ports:
      - ${METADATA_DB_PORT}:5432
    command: [
      "postgres",
      "-c", "shared_preload_libraries=pg_stat_statements"
    ]
    logging: *default-logging
    deploy:
      resources:
        limits:
          memory: 4G
    volumes:
      - ${VOLUME_MOUNT}/metadata-db/data:/var/lib/postgresql/data

  fasten-restapi-reverse-proxy:
    build:
      context: .
      dockerfile: restapi-reverse-proxy/Dockerfile
    restart: "unless-stopped"
    ports:
      - "${API_HTTP_PORT}:80"
      - "${API_HTTPS_PORT}:443"
    logging: *default-logging
    deploy:
      resources:
        limits:
          memory: 256M
    depends_on:
      - metadata-db


################################################################################
### FASTEN code quality services
################################################################################

  fasten-rapid-metadata-plugin:
    profiles: ["quality", "java", "c", "python", "all"]
    image: ${RAPID_METADATA_PLUGIN_IMAGE}
    restart: "unless-stopped"
    environment:
      POD_INSTANCE_ID: "fasten-rapid-metadata-plugin"
      FASTEN_DBPASS: "${METADATA_DB_PASSWORD}"
      JVM_MEM_MAX: ""
    command: [
      "-k", "${KAFKA_INTERNAL_ADDR}",
      "-pl", "QualityAnalyzer",
      "-cg", "QualityAnalyzer",
      "-kt", "QualityAnalyzer=fasten.RapidPlugin.callable.out|fasten.RapidPlugin.callable.priority.out",
      "-d",  "mvn=${METADATA_DB_JAVA_URL},debian=${METADATA_DB_C_URL},PyPI=${METADATA_DB_PYTHON_URL}",
      "--local_storage"
    ]
    logging: *default-logging
    deploy:
      resources:
        limits:
          memory: 2G
    depends_on:
      - kafka
      - metadata-db

  fasten-rapid-plugin-java:
    profiles: ["quality", "java", "all"]
    image: ${RAPID_ANALYZER_IMAGE}
    restart: "unless-stopped"
    command: [
      '--group_id=RapidPlugin_Maven',
      '--sources_dir=/mnt/fasten/rapid',
      '--consumer_timeout_ms=1000',
      '--consume_topic=fasten.MetadataDBJavaExtension.out',
      '--produce_topic=fasten.RapidPlugin.out',
      '--produce_callable_topic=fasten.RapidPlugin.callable.out',
      '--err_topic=fasten.RapidPlugin.err',
      '--log_topic=fasten.RapidPlugin.log',
      '--bootstrap_servers=${KAFKA_INTERNAL_ADDR}'
    ]
    volumes:
      - ${JAVA_VOLUME_MOUNT}
    logging: *default-logging
    deploy:
      resources:
        limits:
          memory: 2G
    depends_on:
      - kafka
      - fasten-rapid-metadata-plugin

  fasten-rapid-plugin-java-priority:
    profiles: ["quality", "java", "all"]
    image: ${RAPID_ANALYZER_IMAGE}
    restart: "unless-stopped"
    command: [
      '--group_id=RapidPlugin_Maven',
      '--sources_dir=/mnt/fasten/rapid',
      '--consumer_timeout_ms=1000',
      '--consume_topic=fasten.MetadataDBJavaExtension.priority.out',
      '--produce_topic=fasten.RapidPlugin.priority.out',
      '--produce_callable_topic=fasten.RapidPlugin.callable.priority.out',
      '--err_topic=fasten.RapidPlugin.priority.err',
      '--log_topic=fasten.RapidPlugin.priority.log',
      '--bootstrap_servers=${KAFKA_INTERNAL_ADDR}'
    ]
    volumes:
      - ${JAVA_VOLUME_MOUNT}
    logging: *default-logging
    deploy:
      resources:
        limits:
          memory: 2G
    depends_on:
      - kafka
      - fasten-rapid-metadata-plugin

  fasten-rapid-plugin-c:
    profiles: ["quality", "c", "all"]
    image: ${RAPID_ANALYZER_IMAGE}
    restart: "unless-stopped"
    command: [
      '--group_id=RapidPlugin_Debian',
      '--sources_dir=/mnt/fasten/rapid',
      '--consumer_timeout_ms=1000',
      '--consume_topic=fasten.MetadataDBCExtension.out',
      '--produce_topic=fasten.RapidPlugin.out',
      '--produce_callable_topic=fasten.RapidPlugin.callable.out',
      '--err_topic=fasten.RapidPlugin.err',
      '--log_topic=fasten.RapidPlugin.log',
      '--bootstrap_servers=${KAFKA_INTERNAL_ADDR}'
    ]
    volumes:
      - ${C_VOLUME_MOUNT}
    logging: *default-logging
    deploy:
      resources:
        limits:
          memory: 2G
    depends_on:
      - kafka
      - fasten-rapid-metadata-plugin

  fasten-rapid-plugin-python:
    profiles: ["quality", "python", "all"]
    image: ${RAPID_ANALYZER_IMAGE}
    restart: "unless-stopped"
    command: [
      '--group_id=RapidPlugin_PyPi',
      '--sources_dir=/mnt/fasten/rapid',
      '--consumer_timeout_ms=1000',
      '--consume_topic=fasten.MetadataDBPythonExtension.out',
      '--produce_topic=fasten.RapidPlugin.out',
      '--produce_callable_topic=fasten.RapidPlugin.callable.out',
      '--err_topic=fasten.RapidPlugin.err',
      '--log_topic=fasten.RapidPlugin.log',
      '--bootstrap_servers=${KAFKA_INTERNAL_ADDR}'
    ]
    volumes:
      - ${PYTHON_VOLUME_MOUNT}
    logging: *default-logging
    deploy:
      resources:
        limits:
          memory: 2G
    depends_on:
      - kafka
      - fasten-rapid-metadata-plugin



################################################################################
### FASTEN vulnerability services
################################################################################

  fasten-vulnerability-producer:
    profiles: ["vulnerabilities", "all"]
    image: ${VULNERABILITY_PRODUCER_IMAGE}
    restart: "unless-stopped"
    env_file:
      - secrets/fasten-vulnerability-producer.env
    environment:
      FASTEN_MONGOPASS: "not-used"
      JVM_MEM_MAX: ""
    command: [
      "-k", "${KAFKA_INTERNAL_ADDR}",
      "-kt", "fasten.Vulnerabilities.out",
      "-po", "/mnt/fasten"
    ]
    volumes:
      - ${VOLUME_MOUNT}:/mnt/fasten
    logging: *default-logging
    deploy:
      resources:
        limits:
          memory: 8G
    depends_on:
      - kafka

  fasten-vulnerability-statements-processor:
    profiles: ["vulnerabilities", "all"]
    image: ${VULNERABILITY_METADATA_PLUGINS_IMAGE}
    restart: "unless-stopped"
    environment:
      FASTEN_DBPASS: "${METADATA_DB_PASSWORD}"
      API_URL: "http://fasten-restapi-reverse-proxy/api/"
      JVM_MEM_MAX: ""
      POD_INSTANCE_ID: "fasten-vulnerability-statements-processor"
    command: [
      "-k",  "${KAFKA_INTERNAL_ADDR}",
      "-pl", "VulnerabilityStatementsKafkaPlugin",
      "-cg", "VulnerabilityStatementsKafkaPlugin",
      "-kt", "VulnerabilityStatementsKafkaPlugin=fasten.Vulnerabilities.out",
      "-po", "VulnerabilityStatementsKafkaPlugin=/mnt/fasten",
      "-d",  "mvn=${METADATA_DB_JAVA_URL},debian=${METADATA_DB_C_URL},PyPI=${METADATA_DB_PYTHON_URL}",
      "--local_storage"
    ]
    volumes:
      - ${VOLUME_MOUNT}:/mnt/fasten
    logging: *default-logging
    deploy:
      resources:
        limits:
          memory: 2G
    depends_on:
      - kafka
      - metadata-db

  fasten-vulnerability-packages-listener:
    profiles: ["vulnerabilities", "all"]
    image: ${VULNERABILITY_METADATA_PLUGINS_IMAGE}
    restart: "unless-stopped"
    environment:
      FASTEN_DBPASS: "${METADATA_DB_PASSWORD}"
      API_URL: "http://fasten-restapi-reverse-proxy/api/"
      JVM_MEM_MAX: ""
      POD_INSTANCE_ID: "fasten-vulnerability-packages-listener"
    command: [
      "-k",  "${KAFKA_INTERNAL_ADDR}",
      "-pl", "VulnerabilityPackagesKafkaPlugin",
      "-cg", "VulnerabilityPackagesKafkaPlugin",
      "-kt", "VulnerabilityPackagesKafkaPlugin=fasten.POMAnalyzer.out|fasten.POMAnalyzer.priority.out|fasten.MetadataDBJavaExtension.out|fasten.MetadataDBJavaExtension.priority.out|fasten.MetadataDBPythonExtension.out|fasten.MetadataDBCExtension.out",
      "-po", "VulnerabilityPackagesKafkaPlugin=/mnt/fasten",
      "-d",  "mvn=${METADATA_DB_JAVA_URL},debian=${METADATA_DB_C_URL},PyPI=${METADATA_DB_PYTHON_URL}",
      "--local_storage"
    ]
    volumes:
      - ${VOLUME_MOUNT}:/mnt/fasten
    logging: *default-logging
    deploy:
      resources:
        limits:
          memory: 2G
    depends_on:
      - kafka
      - metadata-db

  fasten-vulnerability-cache-invalidation:
    profiles: ["vulnerabilities-cache", "all"]
    image: ${VULNERABILITY_CACHE_PLUGINS_IMAGE}
    restart: "unless-stopped"
    environment:
      FASTEN_DBPASS: "${METADATA_DB_PASSWORD}"
      JVM_MEM_MAX: ""
    command: [
      "-k",  "${KAFKA_INTERNAL_ADDR}",
      "-pl", "VulnerabilityCacheInvalidationExtension",
      "-kt", "VulnerabilityCacheInvalidationExtension=fasten.CallableIndexFastenPlugin.out",
      "-ot", "VulnerabilityCacheInvalidationExtension",
      "-d",  "mvn=${METADATA_DB_JAVA_URL}",
      "-dgp", "/mnt/fasten/dep_graph",
      "-b", "/mnt/fasten/vuln-paths-cache"
    ]
    volumes:
      - ${JAVA_VOLUME_MOUNT}
    logging: *default-logging
    deploy:
      resources:
        limits:
          memory: 2G
    depends_on:
      - kafka
      - metadata-db

  fasten-parallel-vulnerability-cache-invalidation:
    profiles: ["vulnerabilities-cache", "all"]
    image: ${VULNERABILITY_CACHE_PLUGINS_IMAGE}
    restart: "unless-stopped"
    environment:
      FASTEN_DBPASS: "${METADATA_DB_PASSWORD}"
      JVM_MEM_MAX: ""
    command: [
      "-k",  "${KAFKA_INTERNAL_ADDR}",
      "-pl", "ParallelVulnerabilityCacheInvalidationExtension",
      "-kt", "ParallelVulnerabilityCacheInvalidationExtension=fasten.VulnerabilityStatementsKafkaPlugin.out",
      "-ot", "VulnerabilityCacheInvalidationExtension",
      "-d",  "mvn=${METADATA_DB_JAVA_URL}",
      "-dgp", "/mnt/fasten/dep_graph",
      "-b", "/mnt/fasten/vuln-paths-cache"
    ]
    volumes:
      - ${JAVA_VOLUME_MOUNT}
    logging: *default-logging
    deploy:
      resources:
        limits:
          memory: 2G
    depends_on:
      - kafka
      - metadata-db


################################################################################
### FASTEN licensing services
################################################################################


  fasten-debian-license-detector:
    profiles: ["c"]
    restart: "unless-stopped"
    build:
      context: "../fasten/docker"
      dockerfile: "slim/Dockerfile"
    #image: sanmiguelsan/fasten-debian-license-detector:0.2
    environment:
      POD_INSTANCE_ID: "fasten-debianlicense-detector"
    command: [
      "-k", "${KAFKA_INTERNAL_ADDR}",
      "-pl", "DebianLicenseDetector",
      "-kt", "DebianLicenseDetector=fasten.MetadataDBCExtension.out",
      "--local_storage"
    ]
    volumes:
      - ${JAVA_VOLUME_MOUNT}
    logging: *default-logging
    deploy:
      resources:
        limits:
          memory: 2G
    depends_on:
      - kafka

  fasten-license-feeder:
    profiles: ["c"]
    restart: "unless-stopped"
    image: ${LICENSE_FEEDER_IMAGE}
    environment:
      FASTEN_DBPASS: "${METADATA_DB_PASSWORD}"
      POD_INSTANCE_ID: "fasten-license-feeder"
    command: [
      "-k", "${KAFKA_INTERNAL_ADDR}",
      "-pl", "LicenseFeeder",
      "-kt", "LicenseFeeder=fasten.DebianLicenseDetector.out",
      "-d",  "mvn=${METADATA_DB_C_URL}",
      "--local_storage"
    ]
    #is there a reason we are mounting JAVA volume here? Is not the feeder just receiving  a kafka message?
    #volumes:
    #  - ${JAVA_VOLUME_MOUNT}
    logging: *default-logging
    deploy:
      resources:
        limits:
          memory: 2G
    depends_on:
      - kafka
      - metadata-db



################################################################################
### FASTEN server maintenance service
################################################################################

  fasten-server-maintenance:
    profiles: ["maintenance"]
    image: ${SERVER_IMAGE}
    restart: "unless-stopped"
    environment:
      FASTEN_DBPASS: "${METADATA_DB_PASSWORD}"
      JVM_MEM_MAX: ""
    entrypoint: ["tail", "-f", "/dev/null"]
    network_mode: "host"
    volumes:
      - ${VOLUME_MOUNT}:/mnt/fasten
    logging: *default-logging
    deploy:
      resources:
        limits:
          memory: 2G
    depends_on:
      - metadata-db

################################################################################
### Java/Maven specific services for FASTEN
################################################################################

  fasten-repo-cloner:
    profiles: ["licensing", "all"]
    image: ${REPO_CLONER_IMAGE}
    restart: "unless-stopped"
    environment:
      MVN_REPO: "${MVN_REPO}"
      POD_INSTANCE_ID: fasten-repo-cloner
      JVM_MEM_MAX: ""
    command: [
      "-k", "${KAFKA_INTERNAL_ADDR}",
      "-pl", "RepoCloner",
      "-kt", "RepoCloner=fasten.POMAnalyzer.out|fasten.POMAnalyzer.priority.out",
      "-b",  "/mnt/fasten/repos",
      "--local_storage"
    ]
    volumes:
      - ${JAVA_VOLUME_MOUNT}
    logging: *default-logging
    deploy:
      resources:
        limits:
          memory: 2G
    depends_on:
      - kafka

  fasten-maven-crawler:
    profiles: ["disabled-by-default"]
    image: ${MAVEN_CRAWLER_IMAGE}
    restart: "unless-stopped"
    environment:
      MVN_REPO: "${MVN_REPO}"
      PG_PWD: "${METADATA_DB_PASSWORD}"
      JVM_MEM_MAX: ""
    command: [
      "--kafka.url", "${KAFKA_INTERNAL_ADDR}",
      "--plugin", "eu.f4sten.mavencrawler.Main",
      "--baseDir", "${CONTAINER_BASEDIR}",
      "--instanceId", "mc1",
      "--logLevel", "INFO"
    ]
    volumes:
      - ${JAVA_VOLUME_MOUNT}
    logging: *default-logging
    deploy:
      resources:
        limits:
          memory: 2G
    depends_on:
      - kafka
      - metadata-db

  fasten-pom-analyzer:
    profiles: ["java", "all"]
    image: ${POM_ANALYZER_IMAGE}
    restart: "unless-stopped"
    environment:
      MVN_REPO: "${MVN_REPO}"
      PG_PWD: "${METADATA_DB_PASSWORD}"
      JVM_MEM_MAX: ""
    command: [
      "--kafka.url", "${KAFKA_INTERNAL_ADDR}",
      "--plugin", "eu.f4sten.pomanalyzer.Main",
      "--db.url", "${METADATA_DB_JAVA_URL_NO_USER}",
      "--db.user", "${METADATA_DB_USER}",
      "--baseDir", "${CONTAINER_BASEDIR}",
      "--instanceId", "pa1",
      "--logLevel", "INFO"
    ]
    volumes:
      - ${JAVA_VOLUME_MOUNT}
    logging: *default-logging
    deploy:
      resources:
        limits:
          memory: 2G
    depends_on:
      - kafka
      - metadata-db

  fasten-opal:
    profiles: ["java", "all"]
    image: ${JAVACG_OPAL_IMAGE}
    restart: "unless-stopped"
    environment:
      MVN_REPO: "${MVN_REPO}"
      POD_INSTANCE_ID: "fasten-opal"
      JVM_MEM_MAX: ""
    command: [
      "-k", "${KAFKA_INTERNAL_ADDR}",
      "-pl", "OPAL",
      "-kt", "OPAL=fasten.POMAnalyzer.out|fasten.POMAnalyzer.priority.out",
      "-po", "OPAL=/mnt/fasten/revision-callgraphs",
      "--consume_timeout", "1200",
      "--consume_timeout_exit",
      "--local_storage"
    ]
    volumes:
      - ${JAVA_VOLUME_MOUNT}
    logging: *default-logging
    deploy:
      resources:
        limits:
          memory: 16G
    depends_on:
      - kafka

  fasten-metadata-db-extension-java:
    profiles: ["java", "all"]
    image: ${CALLGRAPH_METADATA_PLUGINS_IMAGE}
    restart: "unless-stopped"
    environment:
      FASTEN_DBPASS: "${METADATA_DB_PASSWORD}"
      POD_INSTANCE_ID: "fasten-metadata-db-extension-java"
      JVM_MEM_MAX: ""
    command: [
      "-k", "${KAFKA_INTERNAL_ADDR}",
      "-pl", "MetadataDBJavaExtension",
      "-kt", "MetadataDBJavaExtension=fasten.OPAL.out|fasten.OPAL.priority.out",
      "-po", "MetadataDBJavaExtension=/mnt/fasten/global-callgraphs",
      "-d",  "mvn=${METADATA_DB_JAVA_URL}",
      "--local_storage"
    ]
    volumes:
      - ${JAVA_VOLUME_MOUNT}
    logging: *default-logging
    deploy:
      resources:
        limits:
          memory: 8G
    depends_on:
      - kafka
      - metadata-db

  fasten-callable-index-java:
    profiles: ["java", "all"]
    image: ${CALLABLE_INDEX_IMAGE}
    restart: "unless-stopped"
    environment:
      POD_INSTANCE_ID: "fasten-callable-index-java"
      JVM_MEM_MAX: ""
    command: [
      "-k", "${KAFKA_INTERNAL_ADDR}",
      "-pl", "CallableIndexFastenPlugin",
      "-kt", "CallableIndexFastenPlugin=fasten.MetadataDBJavaExtension.out|fasten.MetadataDBJavaExtension.priority.out",
      "-gd", "/mnt/fasten/callable-index",
      "--local_storage"
    ]
    volumes:
      - ${JAVA_VOLUME_MOUNT}
    logging: *default-logging
    deploy:
      resources:
        limits:
          memory: 4G
    depends_on:
      - kafka

  fasten-restapi-java:
    profiles: ["java", "all"]
    image: ${RESTAPI_IMAGE}
    restart: "unless-stopped"
    environment:
      FASTEN_DBPASS: "${METADATA_DB_PASSWORD}"
    command: [
      "--ka=${KAFKA_INTERNAL_ADDR}",
      "--kt=fasten.mvn.releases.priority.out",
      "--rcg.url=http://fasten-rcg-nginx-java:80",
      "--gd.path=/mnt/fasten/callable-index",
      "--dg.path=/mnt/fasten/dep_graph",
      "--db.url=jdbc:postgresql://metadata-db:5432/fasten_java",
      "--db.user=${METADATA_DB_USER}",
      "--vc.path=/mnt/fasten/vuln-paths-cache"
    ]
    volumes:
      - ${JAVA_VOLUME_MOUNT}
    logging: *default-logging
    deploy:
      resources:
        limits:
          memory: 2G
    depends_on:
      - kafka
      - metadata-db

  fasten-rcg-nginx-java:
    profiles: ["java", "all"]
    image: ${NGINX_IMAGE}
    restart: "unless-stopped"
    volumes:
      - ${JAVA_RCG_VOLUME_MOUNT}
    logging: *default-logging
    deploy:
      resources:
        limits:
          memory: 256M
    depends_on:
      - fasten-restapi-java

  fasten-flink-javasync-jobmanager:
    profiles: ["licensing", "all"]
    image: ${JAVASYNC_IMAGE}
    restart: "unless-stopped"
    environment:
      FLINK_PROPERTIES: "jobmanager.rpc.address: fasten-flink-javasync-jobmanager"
    command: [
      "standalone-job",
      "--job-classname", "eu.fasten.synchronization.Main",
      "--brokers", "${KAFKA_INTERNAL_ADDR}",
      "--topic_one", "fasten.RepoCloner.out",
      "--topic_two", "fasten.MetadataDBJavaExtension.out",
      "--output_topic", "SyncJava",
      "--topic_one_keys", "input.input.groupId,input.input.artifactId,input.input.version",
      "--topic_two_keys", "input.input.input.groupId,input.input.input.artifactId,input.input.input.version",
      "--window_time", "259200",
      "--parallelism", "8",
      "--backendFolder", "/mnt/fasten/flink-javasync",
      "--delay_topic", "SyncJavaDelay",
      "--enable_delay", "true"
    ]
    volumes:
      - ${JAVA_VOLUME_MOUNT}
    logging: *default-logging
    depends_on:
      - kafka

  fasten-flink-javasync-taskmanager:
    profiles: ["licensing", "all"]
    image: ${JAVASYNC_IMAGE}
    restart: "unless-stopped"
    environment:
      FLINK_PROPERTIES: "jobmanager.rpc.address: fasten-flink-javasync-jobmanager"
    command: [
      "taskmanager"
    ]
    volumes:
      - ${JAVA_VOLUME_MOUNT}
    logging: *default-logging
    depends_on:
      - fasten-flink-javasync-jobmanager


################################################################################
### C/Debian specific services for FASTEN
################################################################################

  fasten-cscout:
    profiles: ["c", "all"]
    image: ${CSCOUT_IMAGE}
    restart: "unless-stopped"
    privileged: true
    command: [
      "-i", "fasten.debian.releases",
      "-o", "fasten.cscout.out",
      "-e", "fasten.cscout.err",
      "-l", "fasten.cscout.log",
      "-b", "${KAFKA_INTERNAL_ADDR}",
      "-g", "debian_group_cscout",
      "-s", "5",
      "-d", "/mnt/fasten/revision-callgraphs"
    ]
    volumes:
      - ${C_VOLUME_MOUNT}
    logging: *default-logging
    deploy:
      resources:
        limits:
          memory: 4G
    depends_on:
      - kafka

  fasten-metadata-db-extension-c:
    profiles: ["c", "all"]
    image: ${CALLGRAPH_METADATA_PLUGINS_IMAGE}
    restart: "unless-stopped"
    environment:
      FASTEN_DBPASS: "${METADATA_DB_PASSWORD}"
      POD_INSTANCE_ID: "fasten-metadata-db-extension-c"
      JVM_MEM_MAX: ""
    command: [
      "-k", "${KAFKA_INTERNAL_ADDR}",
      "-pl", "MetadataDBCExtension",
      "-kt", "MetadataDBCExtension=fasten.cscout.out",
      "-po", "MetadataDBCExtension=/mnt/fasten/global-callgraphs",
      "-d",  "debian=${METADATA_DB_C_URL}",
      "--local_storage"
    ]
    volumes:
      - ${C_VOLUME_MOUNT}
    logging: *default-logging
    deploy:
      resources:
        limits:
          memory: 8G
    depends_on:
      - kafka
      - metadata-db

  fasten-callable-index-c:
    profiles: ["c", "all"]
    image: ${CALLABLE_INDEX_IMAGE}
    restart: "unless-stopped"
    environment:
      POD_INSTANCE_ID: "fasten-callable-index-c"
      JVM_MEM_MAX: ""
    command: [
      "-k", "${KAFKA_INTERNAL_ADDR}",
      "-pl", "CallableIndexFastenPlugin",
      "-kt", "CallableIndexFastenPlugin=fasten.MetadataDBCExtension.out",
      "-gd", "/mnt/fasten/callable-index",
      "--local_storage"
    ]
    volumes:
      - ${C_VOLUME_MOUNT}
    logging: *default-logging
    deploy:
      resources:
        limits:
          memory: 4G
    depends_on:
      - kafka

  fasten-restapi-c:
    profiles: ["c", "all"]
    image: ${RESTAPI_IMAGE}
    restart: "unless-stopped"
    environment:
      FASTEN_DBPASS: "${METADATA_DB_PASSWORD}"
    command: [
      "--ka=${KAFKA_INTERNAL_ADDR}",
      "--kt=fasten.debian.releases.ingest",
      "--rcg.url=http://fasten-rcg-nginx-c:80",
      "--gd.path=/mnt/fasten/callable-index",
      "--dg.path=/mnt/fasten/dep_graph",
      "--db.url=jdbc:postgresql://metadata-db:5432/fasten_c",
      "--db.user=${METADATA_DB_USER}",
      "--vc.path=/mnt/fasten/vuln-paths-cache"
    ]
    volumes:
      - ${C_VOLUME_MOUNT}
    logging: *default-logging
    deploy:
      resources:
        limits:
          memory: 2G
    depends_on:
      - kafka
      - metadata-db

  fasten-rcg-nginx-c:
    profiles: ["c", "all"]
    image: ${NGINX_IMAGE}
    restart: "unless-stopped"
    volumes:
      - ${C_RCG_VOLUME_MOUNT}
    logging: *default-logging
    deploy:
      resources:
        limits:
          memory: 256M
    depends_on:
      - fasten-restapi-c

  fasten-c-stitch:
    profiles: ["c", "all"]
    image: ${C_STITCH_IMAGE}
    restart: "unless-stopped"
    ports:
      - "${C_STITCH_PORT}:5000"
    logging: *default-logging
    deploy:
      resources:
        limits:
          memory: 2G


################################################################################
### Python/PyPI specific services for FASTEN
################################################################################

  fasten-pypi-filter:
    profiles: ["python", "all"]
    image: ${PYPI_FILTER_IMAGE}
    restart: "unless-stopped"
    command: [
      "fasten.PyPI.releases",
      "fasten.PyPIFilter.out",
      "${KAFKA_INTERNAL_ADDR}",
      "pypi_group_pypi_filter",
      "5",
      "--check-old"
    ]
    logging: *default-logging
    deploy:
      resources:
        limits:
          memory: 2G
    depends_on:
      - kafka

  fasten-pycg:
    profiles: ["python", "all"]
    image: ${PYCG_IMAGE}
    restart: "unless-stopped"
    command: [
      "fasten.PyPIFilter.out",
      "fasten.PyCG.out",
      "fasten.PyCG.err",
      "${KAFKA_INTERNAL_ADDR}",
      "pycg_group_pycg",
      "5",
      "/mnt/fasten/revision-callgraphs",
      "300000"
    ]
    volumes:
      - ${PYTHON_VOLUME_MOUNT}
    logging: *default-logging
    deploy:
      resources:
        limits:
          memory: 4G
    depends_on:
      - kafka

  fasten-metadata-db-extension-python:
    profiles: ["python", "all"]
    image: ${CALLGRAPH_METADATA_PLUGINS_IMAGE}
    restart: "unless-stopped"
    environment:
      FASTEN_DBPASS: "${METADATA_DB_PASSWORD}"
      POD_INSTANCE_ID: "fasten-metadata-db-extension-python"
      JVM_MEM_MAX: ""
    command: [
      "-k", "${KAFKA_INTERNAL_ADDR}",
      "-pl", "MetadataDBPythonExtension",
      "-kt", "MetadataDBPythonExtension=fasten.PyCG.out",
      "-po", "MetadataDBPythonExtension=/mnt/fasten/global-callgraphs",
      "-d",  "PyPI=${METADATA_DB_PYTHON_URL}",
      "--local_storage"
    ]
    volumes:
      - ${PYTHON_VOLUME_MOUNT}
    logging: *default-logging
    deploy:
      resources:
        limits:
          memory: 8G
    depends_on:
      - kafka
      - metadata-db

  fasten-callable-index-python:
    profiles: ["python", "all"]
    image: ${CALLABLE_INDEX_IMAGE}
    restart: "unless-stopped"
    environment:
      POD_INSTANCE_ID: "fasten-callable-index-python"
      JVM_MEM_MAX: ""
    command: [
      "-k", "${KAFKA_INTERNAL_ADDR}",
      "-pl", "CallableIndexFastenPlugin",
      "-kt", "CallableIndexFastenPlugin=fasten.MetadataDBPythonExtension.out",
      "-gd", "/mnt/fasten/callable-index",
      "--local_storage"
    ]
    volumes:
      - ${PYTHON_VOLUME_MOUNT}
    logging: *default-logging
    deploy:
      resources:
        limits:
          memory: 4G
    depends_on:
      - kafka

  fasten-restapi-python:
    profiles: ["python", "all"]
    image: ${RESTAPI_IMAGE}
    restart: "unless-stopped"
    environment:
      FASTEN_DBPASS: "${METADATA_DB_PASSWORD}"
    command: [
      "--ka=${KAFKA_INTERNAL_ADDR}",
      "--kt=fasten.PyPI.releases.ingest",
      "--rcg.url=http://fasten-rcg-nginx-python:80",
      "--gd.path=/mnt/fasten/callable-index",
      "--dg.path=/mnt/fasten/dep_graph",
      "--db.url=jdbc:postgresql://metadata-db:5432/fasten_python",
      "--db.user=${METADATA_DB_USER}",
      "--vc.path=/mnt/fasten/vuln-paths-cache"
    ]
    volumes:
      - ${PYTHON_VOLUME_MOUNT}
    logging: *default-logging
    deploy:
      resources:
        limits:
          memory: 2G
    depends_on:
      - kafka
      - metadata-db

  fasten-rcg-nginx-python:
    profiles: ["python", "all"]
    image: ${NGINX_IMAGE}
    restart: "unless-stopped"
    volumes:
      - ${PYTHON_RCG_VOLUME_MOUNT}
    logging: *default-logging
    deploy:
      resources:
        limits:
          memory: 256M
    depends_on:
      - fasten-restapi-python


  fasten-python-stitch:
    profiles: ["python", "all"]
    image: ${PYTHON_STITCH_IMAGE}
    restart: "unless-stopped"
    ports:
      - "${PYTHON_STITCH_PORT}:5000"
    logging: *default-logging
    deploy:
      resources:
        limits:
          memory: 2G
